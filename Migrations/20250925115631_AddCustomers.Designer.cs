// <auto-generated />
using System;
using BookWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250925115631_AddCustomers")]
    partial class AddCustomers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BookWebApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Andrew Hunt",
                            Genre = "Software",
                            Language = "English",
                            PublishedDate = new DateTime(1999, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Pragmatic Programmer"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Robert C. Martin",
                            Genre = "Software",
                            Language = "English",
                            PublishedDate = new DateTime(2008, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Eric Evans",
                            Genre = "Software",
                            Language = "English",
                            PublishedDate = new DateTime(2003, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Domain-Driven Design"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Erich Gamma",
                            Genre = "Software",
                            Language = "English",
                            PublishedDate = new DateTime(1994, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Design Patterns"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Martin Fowler",
                            Genre = "Software",
                            Language = "English",
                            PublishedDate = new DateTime(1999, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Refactoring"
                        });
                });

            modelBuilder.Entity("BookWebApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
